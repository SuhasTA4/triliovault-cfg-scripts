## Please note: compute-prefix can not be empty string. compute-suffix can be empty string.
## Make sure that all compute nodes are covered/mentioned for each NFS share you list here in multi-ip nfs shares list.
multi_ip_nfs_shares:
  - "192.168.1.34:/var/share1": ['compute-prefix[1:10]compute-suffix', 'compute_bare.trilio.demo']
    "192.168.1.35:/var/share1": ['compute-prefix[11:20]compute-suffix', 'compute_virtual']
    "192.168.1.33:/var/share1": ['compute-prefix[21:30]compute-suffix']

  - "192.168.2.56:/var/share2": ['compute-prefix[1:20]compute-suffix', 'compute_bare.trilio.demo']
    "192.168.2.57:/var/share2": ['compute-prefix[21:30]compute-suffix', 'compute_virtual']

single_ip_nfs_shares:
  - "192.168.3.98:/var/share3"
  - "192.168.4.102:/var/share4"

##  Example format for enviornments where there is no single ip nfs share.
#single_ip_nfs_shares: []


###### Supported range(compact) host name formats
## foo[1:10], foo[21:40]     --- compute-suffix is empty string here
## foo[1:10].bar, foo[21:40].bar    --- compute-prefix and compute-suffix are not empty


## Invalid range host names:
## [1:10]foo, [21:30]foo  --- because compute-prefix is empty.

## If your hostnames does not match a pattern, you can directly list down their actual values
## You can't use number range format.
## In above sample format, 'compute_bare.trilio.demo' and 'compute_virtual' are actual hostnames.